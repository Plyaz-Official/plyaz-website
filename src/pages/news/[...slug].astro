---
import { getCollection, render } from 'astro:content';
import MainLayout from "../../layouts/MainLayout.astro";
import chevionLeft from "./chevron-left.png";
import Tag from "../../components/Tag.astro";

export async function getStaticPaths() {
  const posts = await getCollection("news");

  return posts.map((post) => ({
    params: { id: post.id, slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);

---

<MainLayout>
  <div class="w-full max-w-[800px] h-auto flex flex-col items-left m-auto gap-10 mt-6 mb-16 px-5">
    <a href="/news">
      <div data-class="return-page" class="flex flex-row gap-2">
        <img src={chevionLeft.src} alt="chevion left icon" class="w-5 h-5 pt-1">
        <p class="text-base uppercase">Back</p>
      </div>
    </a>
    <div data-name="title-section" class="flex flex-col gap-5">
      <div class="flex flex-col gap-1">
        <h1 class="text-4xl xl:text-6xl font-semibold">{post.data.title}</h1>
        <p class="text-lg text-accent-foreground">by {post.data.author}</p>
      </div>
      <div data-name="tags" class="flex flex-row gap-2">
        {
          post.data.tags.map(value => (
            <Tag value={value} />
          ))
        }
      </div>
    </div>
    <div>
      <img src={post.data.poster.src} alt="" class="bg-amber-100 w-full max-w-[800px] h-auto">
    </div>
  </div>
  <div data-name="news-content" class="w-full max-w-[800px] h-auto flex flex-col items-left m-auto gap-1 px-5 xl:pb-50 pb-24">
    <Content />
  </div>
</MainLayout>

<style>
  [data-name="news-content"] {
    h2 { 
      font-size: 1.5rem; 
      font-weight: 600;

      &:not(:first-child) {
        padding-top: 1.5rem;
      }
    }

    p { 
      font-size: large; 
      color: var(--color-secondary-foreground);
    }

    ol {
      font-size: large;
    }

    ul {
      font-size: large;
      padding: 20px;
      list-style-type: disc;
    }

    li {
      padding-bottom: 1rem;
    }

    a:hover {
      color: var(--color-white);
      background-image: var(--gradient-orange);
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      /* display: inline-block; */
    }
  }
</style>